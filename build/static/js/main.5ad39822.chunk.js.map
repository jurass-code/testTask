{"version":3,"sources":["components/Add-Form.js","components/List-Workers.js","components/Modal.js","components/New-worker.js","components/Edit-Form.js","App.js","index.js"],"names":["EditWorker","SubmitForm","formRef","modalClose","dateOfEmployment","useRef","dateOfDismissal","dateFormater","date","getFullYear","getMonth","getDate","stringNow","Date","validData","name","surname","patronymic","dateOfBirth","validName","e","target","value","length","test","classList","remove","add","validDate","minDate","now","dateForm","validDataOfEmployment","validDateOfDismissal","current","min","formDateOfDismissal","formDataOfEmployment","className","ref","onSubmit","preventDefault","obj","key","checkValid","reset","htmlFor","onBlur","type","required","max","ListWorker","setActive","content","cols","colSpan","onClick","Modal","active","stopPropagation","array","deleteWorker","editWorker","map","item","index","classRow","position","gender","driver","id","App","useState","JSON","parse","localStorage","getItem","workers","setWorkers","modalActive","setModalActive","modalEditActive","setModalEditActive","useEffect","setItem","stringify","filter","forEach","checked","objForm","newWorker","uuidv4","newArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5ad39822.chunk.js","sourcesContent":["import React, {\n    useRef\n} from 'react';\n\nexport default function EditWorker({\n    SubmitForm,\n    formRef,\n    modalClose\n}) {\n    const dateOfEmployment = useRef();\n    const dateOfDismissal = useRef();\n    const dateFormater = (date) => {\n        return (date.getFullYear() + (date.getMonth() < 9 ? '-0' + (date.getMonth() + 1) : '-' + (date.getMonth() + 1)) + (date.getDate() < 10 ? '-0' + date.getDate() : '-' + date.getDate()))\n    };\n    const stringNow = dateFormater(new Date())\n\n    const validData = {\n        name: true,\n        surname: true,\n        patronymic: true,\n        dateOfBirth: true,\n        dateOfEmployment: true,\n        dateOfDismissal: true\n    }\n\n    const checkValid = (obj) => {\n        for (let key in obj) {\n            if (!obj[key])\n                return (false)\n        }\n        return true\n    };\n\n    const validName = (e) => {\n        const regEx = /^([А-Я]{1}[а-яё]{1,23}|[A-Z]{1}[a-z]{1,23})$/;\n        if (e.target.value.length < 20 && regEx.test(e.target.value) === true) {\n            validData[e.target.name] = true\n            e.target.classList.remove('invalid');\n        } else {\n            validData[e.target.name] = false;\n            e.target.classList.add('invalid');\n        }\n    };\n\n    const validDate = e => {\n        const minDate = new Date('1900-01-01');\n        const now = new Date();\n        const dateForm = new Date(e.target.value);\n        if (dateForm <= now && dateForm > minDate) {\n            validData[e.target.name] = true;\n            e.target.classList.remove('invalid');\n            if (e.target.name === 'dateOfEmployment')\n                validDataOfEmployment(dateForm);\n            if (e.target.name === 'dateOfDismissal')\n                validDateOfDismissal(dateForm);\n        } else if ((e.target.name === 'dateOfDismissal') && e.target.value === '') {\n            validData[e.target.name] = true;\n            e.target.classList.remove('invalid');\n        } else {\n            validData[e.target.name] = false;\n            e.target.classList.add('invalid');\n        }\n    };\n\n    const validDataOfEmployment = (dateForm) => {\n        dateOfDismissal.current.min=dateFormater(dateForm);\n        const formDateOfDismissal = new Date(dateOfDismissal.current.value);\n        dateOfDismissal.current.min=dateFormater(dateForm);\n        if (dateForm > formDateOfDismissal) {\n            validData.dateOfDismissal = false;\n            dateOfDismissal.current.classList.add('invalid');\n        }\n    }\n    const validDateOfDismissal = (dateForm) => {\n        const formDataOfEmployment = new Date(dateOfEmployment.current.value);\n        if(dateOfEmployment.current.value!=='')\n        dateOfDismissal.current.min = dateOfEmployment.current.value;\n        else dateOfDismissal.current.min ='1900-01-01';\n        if (dateForm < formDataOfEmployment) {\n            validData.dateOfDismissal = false;\n            dateOfDismissal.current.classList.add('invalid');\n        }\n    }\n\n    const handlerForm = (e) => {\n        e.preventDefault();\n        if (checkValid(validData)) {\n            SubmitForm(e.target);\n            e.target.reset();\n            modalClose(false);\n        }\n    };\n    return (\n        <div className='cardWorker'>\n            <h2 className='form-title'>Добавить сотрудника</h2>\n            <form ref={formRef} className='form' onSubmit = {handlerForm}>\n                <label htmlFor='surname' > Фамилия:</label>\n                <input  className='input' onBlur={validName} name='surname' type='text' required></input>\n                <label className='label-input_marg' htmlFor='surname'>Имя:</label>\n                <input className='input' onBlur={validName} name='name' type='text' required></input>\n                <label className='label-input_marg' htmlFor='patronymic'>Отчество:</label>\n                <input className='input' onBlur={validName} name='patronymic' type='text' required></input>\n                <label className='label-input_marg' htmlFor='position'>Должность:</label>\n                <select className='input' name='position' required>\n                    <option>HR</option>\n                    <option>developer JS</option>\n                    <option>developer C#</option>\n                    <option>developer Python</option>\n                </select>              \n                <label className='label-input_marg' htmlFor='dateOfBirth'>Дата рождения:</label>\n                <input className='input' onBlur={validDate} name='dateOfBirth' type='date' min=\"1900-01-01\" max={stringNow} required></input>\n                <label className='label-input_marg title-radio' htmlFor='gender'>Пол:</label>\n                    <div className='radio-box'>\n                        <label htmlFor='gender'> Мужской:{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                        <input className='radio' type='radio' name='gender' value='Мужской' required />\n                        </label>\n                        <label htmlFor='gender'>Женский:{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                        <input className='radio' type='radio' name='gender' value='Женский' required/>\n                        </label> \n                    </div>       \n                <label className='label-input_marg'  htmlFor='dateOfEmployment'>Дата приема на работу:</label>\n                <input className='input' ref={dateOfEmployment} onBlur={validDate} name='dateOfEmployment' type='date' min=\"1900-01-01\" max={stringNow} required></input>\n                <label className='label-input_marg' htmlFor='dateOfDismissal'>Дата увольнения:</label>\n                <input className='input' ref={dateOfDismissal} onBlur={validDate} name='dateOfDismissal' type='date' min=\"1900-01-01\" max={stringNow}></input>\n                <label className='label-input_marg titlte-checbox' htmlFor='driver'>\n                    Наличие прав:{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                    <input className='radio' name='driver' type='checkbox'></input>\n                </label>\n                <button className='btn btn-form' type='submit'>Добавить</button> \n            </form>\n        </div>\n    );\n}","import React from 'react';\n\nexport default function ListWorker({\n    setActive,\n    content\n}) {\n    return (\n    <div>\n        <table className='table' cols='10'>\n            <thead>\n                <tr className='table__title-row'>\n                    <td className=\"table__td table__title\">ФИО</td>\n                    <td className=\"table__td table__title\">Должность</td>\n                    <td className=\"table__td table__title\">Дата рождения</td>\n                    <td className=\"table__td table__title\">Пол</td>\n                    <td className=\"table__td table__title\">Дата приема на работу</td>\n                    <td className=\"table__td table__title\">Дата увольнения</td>\n                    <td className=\"table__td table__title\">Наличие прав</td>\n                    <td colSpan='2' ><button className='btn btn-add' onClick={()=>{setActive(true)}}><i className=\"fas fa-user-plus\"></i></button></td>\n                </tr>\n            </thead>\n            <tbody>\n                {content}\n            </tbody>\n        </table>\n    </div>)\n}","import React from 'react';\n\nexport default function Modal({\n    active,\n    setActive,\n    content\n}) {\n    return (\n    <div className={active ? 'modal active':'modal'} onClick={() => setActive(false)}>\n        <div className={active ? 'modal__content active':'modal__content'} onClick={e=> e.stopPropagation()}>\n            {content}\n        </div>\n    </div>\n    );\n}","import React from 'react';\n\nexport default function ListWorker({\n    array,\n    deleteWorker,\n    editWorker\n}) {\n    return (\n            array.map((item, index) => {\n                    const classRow = index%2===0?' evenRow': ' oddRow';\n                    return (\n                <tr className={classRow} key={'list' + index}>\n                        <td key={'name' + index} className='table__td'>{item.surname +' ' + item.name + ' ' + item.patronymic}</td>\n                        <td key={'position' + index} className='table__td'>{item.position}</td>\n                        <td key={'dateOfBirth' + index} className='table__td'>{item.dateOfBirth}</td>\n                        <td key={'gender' + index} className='table__td'>{item.gender}</td>\n                        <td key={'dateOfEmployment' + index} className='table__td'>{item.dateOfEmployment}</td>\n                        <td key={'dateOfDismissal' + index} className='table__td'>{item.dateOfDismissal}</td>\n                        <td key={'driver' + index} className='table__td'>{item.driver}</td>\n                        <td><button className={'btn btn-edit'+classRow} onClick={()=>editWorker(item.id)}><i className=\"fas fa-user-edit\"></i></button></td>\n                        <td><button className={'btn btn-del'+classRow} onClick={()=>deleteWorker(item.id)}><i className=\"fas fa-window-close\"></i></button></td>\n                </tr>\n            )\n        })\n    )\n}","import React, {\n    useRef\n} from 'react';\n\nexport default function EditWorker({\n    SubmitForm,\n    formRef,\n    modalClose\n}) {\n    const dateOfEmployment = useRef();\n    const dateOfDismissal = useRef();\n    \n    const dateFormater = (date) => {\n        return (date.getFullYear() + (date.getMonth() < 9 ? '-0' + (date.getMonth() + 1) : '-' + (date.getMonth() + 1)) + (date.getDate() < 10 ? '-0' + date.getDate() : '-' + date.getDate()))\n    };\n    const stringNow = dateFormater(new Date());\n    \n\n    const validData = {\n        name: true,\n        surname: true,\n        patronymic: true,\n        dateOfBirth: true,\n        dateOfEmployment: true,\n        dateOfDismissal: true\n    }\n\n    const checkValid = (obj) => {\n        for (let key in obj) {\n            if (!obj[key])\n                return (false)\n        }\n        return true\n    };\n\n    const validName = (e) => {\n        const regEx = /^([А-Я]{1}[а-яё]{1,23}|[A-Z]{1}[a-z]{1,23})$/;\n        if (e.target.value.length < 30 && regEx.test(e.target.value) === true) {\n            validData[e.target.name] = true\n            e.target.classList.remove('invalid');\n        } else {\n            validData[e.target.name] = false;\n            e.target.classList.add('invalid');\n        }\n    };\n\n    const validDate = e => {\n        const minDate = new Date('1900-01-01');\n        const now = new Date();\n        const dateForm = new Date(e.target.value);\n        if (dateForm <= now && dateForm > minDate) {\n            validData[e.target.name] = true;\n            e.target.classList.remove('invalid');\n            if (e.target.name === 'dateOfEmployment')\n                validDataOfEmployment(dateForm);\n            if (e.target.name === 'dateOfDismissal')\n                validDateOfDismissal(dateForm);\n        } else if ((e.target.name === 'dateOfDismissal') && e.target.value === '') {\n            validData[e.target.name] = true;\n            e.target.classList.remove('invalid');\n        } else {\n            validData[e.target.name] = false;\n            e.target.classList.add('invalid');\n        }\n    };\n\n    const validDataOfEmployment = (dateForm) => {\n        const formDateOfDismissal = new Date(dateOfDismissal.current.value);\n        dateOfDismissal.current.min=dateFormater(dateForm);\n        if (dateForm > formDateOfDismissal) {\n            validData.dateOfDismissal = false;\n            dateOfDismissal.current.classList.add('invalid');\n        }\n    }\n    const validDateOfDismissal = (dateForm) => {\n        const formDataOfEmployment = new Date(dateOfEmployment.current.value);\n        if(dateOfEmployment.current.value!=='')\n        dateOfDismissal.current.min = dateOfEmployment.current.value;\n        else dateOfDismissal.current.min ='1900-01-01';\n        \n        if (dateForm < formDataOfEmployment) {\n            validData.dateOfDismissal = false;\n            dateOfDismissal.current.classList.add('invalid');\n        }\n    }\n\n    const handlerForm = (e) => {\n        e.preventDefault();\n        if (checkValid(validData)) {\n            SubmitForm(e.target);\n            modalClose(false);\n        }\n    };\n\n    return (\n        <div className='cardWorker'>\n            <h2 className='form-title'>Изменить данные сотрудника</h2>\n            <form onSubmit = {handlerForm} ref={formRef} className='form'>\n                <input name='id' className='id'></input>\n                <label  htmlFor='surname' > Фамилия:</label>\n                <input onBlur={validName} name='surname' type='text' className='input' required></input>\n                <label className='label-input_marg' htmlFor='surname'>Имя:</label>\n                <input className='input' onBlur={validName} name='name' type='text' required></input>\n                <label className='label-input_marg' htmlFor='patronymic'>Отчество:</label>\n                <input className='input' onBlur={validName} name='patronymic' type='text' required></input>\n                <label className='label-input_marg' htmlFor='position'>Должность:</label>\n                <select className='input' name='position' required>\n                    <option>HR</option>\n                    <option>developer JS</option>\n                    <option>developer C#</option>\n                    <option>developer Python</option>\n                </select>              \n                <label className='label-input_marg' htmlFor='dateOfBirth'>Дата рождения:</label>\n                <input className='input' onBlur={validDate} name='dateOfBirth' type='date' min=\"1900-01-01\" max={stringNow} required></input>\n                <label className='title-radio label-input_marg' htmlFor='gender'>Пол:</label>\n                    <div className='radio-box'>\n                        <label htmlFor='gender'> Мужской:{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                        <input className='radio' type='radio' name='gender' value='Мужской' required />\n                        </label>\n                        <label htmlFor='gender'>Женский:{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                        <input className='radio' type='radio' name='gender' value='Женский' required/>\n                        </label> \n                    </div>  \n                <label className='label-input_marg' htmlFor='dateOfEmployment'>Дата приема на работу:</label>\n                <input className='input' ref={dateOfEmployment} onBlur={validDate} name='dateOfEmployment' type='date' min=\"1900-01-01\" max={stringNow} required></input>\n                <label className='label-input_marg' htmlFor='dateOfDismissal'>Дата увольнения:</label>\n                <input className='input' ref={dateOfDismissal} onBlur={validDate} name='dateOfDismissal' type='date' min=\"1900-01-01\" max={stringNow} ></input>\n                <label className='titlte-checbox label-input_marg' htmlFor='driver'>\n                    Наличие прав:{'\\u00A0'}{'\\u00A0'}{'\\u00A0'}\n                    <input className='radio' name='driver' type='checkbox'></input>\n                </label>\n                <button className='btn btn-form' type='submit' >Сохранить</button> \n            </form>\n        </div>\n    );\n}","import React, {\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {\n  v4 as uuidv4\n} from 'uuid';\n\nimport AddForm from './components/Add-Form';\nimport ListWorker from './components/List-Workers';\nimport Modal from './components/Modal';\nimport NewWorker from './components/New-worker';\nimport EditWorker from './components/Edit-Form';\n\nfunction App() {\n\n  const [workers, setWorkers] = useState(\n    JSON.parse(localStorage.getItem('list')) || []\n  );\n  const [modalActive, setModalActive] = useState(false);\n  const [modalEditActive, setModalEditActive] = useState(false);\n  const formRef = useRef()\n\n  useEffect(() => {\n    localStorage.setItem('list', JSON.stringify(workers))\n  }, [workers])\n\n  const addWorker = (objForm) => {\n    const newWorker = {\n      id: uuidv4(),\n      surname: objForm.surname.value,\n      name: objForm.name.value,\n      patronymic: objForm.patronymic.value,\n      position: objForm.position.value,\n      dateOfBirth: objForm.dateOfBirth.value,\n      gender: objForm.gender.value,\n      dateOfEmployment: objForm.dateOfEmployment.value,\n      dateOfDismissal: objForm.dateOfDismissal.value,\n      driver: objForm.driver.checked ? 'Есть' : 'Нет',\n    };\n    setWorkers((workers) => [...workers, newWorker])\n  };\n\n  const deleteWorker = (id) => {\n    setWorkers(workers.filter(item => item.id !== id));\n  }\n\n  const editArrayWorkers = (objForm) => {\n    const newArray = workers;\n    newArray[objForm.id.value].surname = objForm.surname.value;\n    newArray[objForm.id.value].name = objForm.name.value;\n    newArray[objForm.id.value].patronymic = objForm.patronymic.value;\n    newArray[objForm.id.value].position = objForm.position.value;\n    newArray[objForm.id.value].dateOfBirth = objForm.dateOfBirth.value;\n    newArray[objForm.id.value].gender = objForm.gender.value;\n    newArray[objForm.id.value].dateOfEmployment = objForm.dateOfEmployment.value;\n    newArray[objForm.id.value].dateOfDismissal = objForm.dateOfDismissal.value;\n    newArray[objForm.id.value].driver = objForm.driver.checked ? 'Есть' : 'Нет';\n\n    localStorage.setItem('list', JSON.stringify(newArray));\n    setWorkers(() => JSON.parse(localStorage.getItem('list')))\n  }\n\n  const edit = (id) => {\n    workers.forEach((item, index) => {\n      if (item.id === id) {\n        formRef.current.id.value = index;\n        formRef.current.surname.value = item.surname;\n        formRef.current.name.value = item.name;\n        formRef.current.patronymic.value = item.patronymic\n        formRef.current.position.value = item.position\n        formRef.current.dateOfBirth.value = item.dateOfBirth\n        formRef.current.gender.value = item.gender\n        formRef.current.dateOfEmployment.value = item.dateOfEmployment\n        formRef.current.dateOfDismissal.value = item.dateOfDismissal\n        formRef.current.driver.checked = (item.driver === 'Есть' ? true : false)\n      }\n    });\n    setModalEditActive(true);\n  }\n  return (\n    <div className=\"wrapper\">\n      <div className='container'>\n        <h1 className='title-app'>Реестр сотрудников</h1>\n        <ListWorker setActive={setModalActive} content={<NewWorker array={workers} deleteWorker={deleteWorker} editWorker={edit}/>}/>\n        <Modal active={modalActive} setActive={setModalActive} content={<AddForm modalClose={setModalActive} SubmitForm={addWorker} />}/>\n        <Modal active={modalEditActive} setActive={setModalEditActive} content={<EditWorker modalClose={setModalEditActive} formRef={formRef} SubmitForm={editArrayWorkers} />}/>\n      </div>\n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}